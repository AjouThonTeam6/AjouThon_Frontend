{"ast":null,"code":"var _jsxFileName = \"/Users/woohyun/AjouThon_Frontend/ajouthon/src/components/ClubTale/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { useTable, useGlobalFilter } from \"react-table\";\nimport styled from \"styled-components\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClubTable = _ref => {\n  _s();\n  let {\n    columnData,\n    datas,\n    needCheckBox\n  } = _ref;\n  const columns = useMemo(() => columnData, []);\n  const data = useMemo(() => datas, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    // @ts-ignore\n    setGlobalFilter\n  } =\n  // @ts-ignore\n  useTable({\n    columns,\n    data\n  }, useGlobalFilter);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSubmit: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n      align: \"center\",\n      width: \"800\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(StyledThead, {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: [needCheckBox ? /*#__PURE__*/_jsxDEV(StyledTh, {\n            style: {\n              width: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"xxx\",\n              value: \"yyy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(StyledTh, {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTBody, {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: [needCheckBox ? /*#__PURE__*/_jsxDEV(StyledTd, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"xxx\",\n                value: \"yyy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), row.cells.map(cell => /*#__PURE__*/_jsxDEV(StyledTd, {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClubTable, \"6AVg90rZW+CJKthJL8Xi4+sldrc=\", false, function () {\n  return [useTable];\n});\n_c = ClubTable;\nconst StyledTable = styled.table`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n`;\n_c2 = StyledTable;\nconst StyledThead = styled.thead`\n  background: #fafafa;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n`;\n_c3 = StyledThead;\nconst StyledTBody = styled.tbody`\n  text-align: center;\n`;\n_c4 = StyledTBody;\nconst StyledTh = styled.th`\n  height: 40px;\n  vertical-align: middle;\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n  line-height: 5px;\n`;\n_c5 = StyledTh;\nconst StyledTd = styled.td`\n  height: 40px;\n  vertical-align: middle;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n`;\n_c6 = StyledTd;\nexport default ClubTable;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ClubTable\");\n$RefreshReg$(_c2, \"StyledTable\");\n$RefreshReg$(_c3, \"StyledThead\");\n$RefreshReg$(_c4, \"StyledTBody\");\n$RefreshReg$(_c5, \"StyledTh\");\n$RefreshReg$(_c6, \"StyledTd\");","map":{"version":3,"names":["React","useMemo","useTable","useGlobalFilter","styled","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","ClubTable","_ref","_s","columnData","datas","needCheckBox","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","StyledTable","align","width","StyledThead","map","headerGroup","getHeaderGroupProps","StyledTh","style","type","name","value","headers","column","getHeaderProps","render","StyledTBody","row","getRowProps","StyledTd","cells","cell","getCellProps","_c","table","_c2","thead","_c3","tbody","_c4","th","_c5","td","_c6","$RefreshReg$"],"sources":["/Users/woohyun/AjouThon_Frontend/ajouthon/src/components/ClubTale/index.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport { useTable, useGlobalFilter } from \"react-table\";\nimport styled from \"styled-components\";\nimport Search from \"./Search\";\n\ninterface ClubTableType {\n  columnData: {\n    accessor: string;\n    Header: string;\n  }[];\n  datas: unknown[];\n  needCheckBox: boolean;\n}\nconst ClubTable = ({ columnData, datas, needCheckBox }: ClubTableType) => {\n  const columns = useMemo(() => columnData, []);\n  const data = useMemo(() => datas, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    // @ts-ignore\n    setGlobalFilter,\n  } =\n    // @ts-ignore\n    useTable({ columns, data }, useGlobalFilter);\n\n  return (\n    <>\n      <Search onSubmit={setGlobalFilter}></Search>\n      <StyledTable align=\"center\" width=\"800\" {...getTableProps()}>\n        <StyledThead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {needCheckBox ? (\n                <StyledTh style={{ width: \"50px\" }}>\n                  <input type=\"checkbox\" name=\"xxx\" value=\"yyy\" />\n                </StyledTh>\n              ) : (\n                <></>\n              )}\n\n              {headerGroup.headers.map((column) => (\n                <StyledTh {...column.getHeaderProps()}>\n                  {column.render(\"Header\")}\n                </StyledTh>\n              ))}\n            </tr>\n          ))}\n        </StyledThead>\n        <StyledTBody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {needCheckBox ? (\n                  <StyledTd>\n                    <input type=\"checkbox\" name=\"xxx\" value=\"yyy\" />\n                  </StyledTd>\n                ) : (\n                  <></>\n                )}\n\n                {row.cells.map((cell) => (\n                  <StyledTd {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </StyledTd>\n                ))}\n              </tr>\n            );\n          })}\n        </StyledTBody>\n      </StyledTable>\n    </>\n  );\n};\n\nconst StyledTable = styled.table`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n`;\nconst StyledThead = styled.thead`\n  background: #fafafa;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n`;\nconst StyledTBody = styled.tbody`\n  text-align: center;\n`;\nconst StyledTh = styled.th`\n  height: 40px;\n  vertical-align: middle;\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n  line-height: 5px;\n`;\nconst StyledTd = styled.td`\n  height: 40px;\n  vertical-align: middle;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n`;\nexport default ClubTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}