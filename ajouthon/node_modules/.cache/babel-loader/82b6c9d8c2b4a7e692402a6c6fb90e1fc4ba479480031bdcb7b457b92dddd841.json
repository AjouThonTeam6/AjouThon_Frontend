{"ast":null,"code":"var CSV_FILE_TYPE = \"text/csv;charset=utf-8;\";\nvar csvDownload = function (_a) {\n  var data = _a.data,\n    _b = _a.filename,\n    filename = _b === void 0 ? \"export.csv\" : _b,\n    _c = _a.delimiter,\n    delimiter = _c === void 0 ? \";\" : _c,\n    headers = _a.headers;\n  var formattedFilename = getFilename(filename);\n  if (data.length === 0) {\n    triggerCsvDownload(headers ? headers.join(delimiter) : \"\", formattedFilename);\n    return;\n  }\n  var headerKeys = Object.keys(data[0]);\n  var columnNames = headers !== null && headers !== void 0 ? headers : headerKeys;\n  var csv = data.map(function (row) {\n    return headerKeys.map(function (fieldName) {\n      var _a;\n      return JSON.stringify(row[fieldName] === 0 ? 0 : (_a = row[fieldName]) !== null && _a !== void 0 ? _a : \"\");\n    }).join(delimiter);\n  });\n  csv.unshift(columnNames.join(delimiter));\n  var csvAsString = csv.join(\"\\r\\n\");\n  triggerCsvDownload(csvAsString, formattedFilename);\n};\nvar triggerCsvDownload = function (csvAsString, fileName) {\n  // BOM support for special characters in Excel\n  var byteOrderMark = \"\\ufeff\";\n  var blob = new Blob([byteOrderMark, csvAsString], {\n    type: CSV_FILE_TYPE\n  });\n  var link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = fileName;\n  link.style.display = \"none\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\nvar getFilename = function (providedFilename) {\n  return /csv$/i.test(providedFilename) ? providedFilename : \"\".concat(providedFilename, \".csv\");\n};\nexport default csvDownload;","map":{"version":3,"names":["CSV_FILE_TYPE","csvDownload","_a","data","_b","filename","_c","delimiter","headers","formattedFilename","getFilename","length","triggerCsvDownload","join","headerKeys","Object","keys","columnNames","csv","map","row","fieldName","JSON","stringify","unshift","csvAsString","fileName","byteOrderMark","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","style","display","body","appendChild","click","removeChild","providedFilename","test","concat"],"sources":["/Users/woohyun/AjouThon_Frontend/ajouthon/node_modules/json-to-csv-export/lib/esm/index.js"],"sourcesContent":["var CSV_FILE_TYPE = \"text/csv;charset=utf-8;\";\nvar csvDownload = function (_a) {\n    var data = _a.data, _b = _a.filename, filename = _b === void 0 ? \"export.csv\" : _b, _c = _a.delimiter, delimiter = _c === void 0 ? \";\" : _c, headers = _a.headers;\n    var formattedFilename = getFilename(filename);\n    if (data.length === 0) {\n        triggerCsvDownload(headers ? headers.join(delimiter) : \"\", formattedFilename);\n        return;\n    }\n    var headerKeys = Object.keys(data[0]);\n    var columnNames = headers !== null && headers !== void 0 ? headers : headerKeys;\n    var csv = data.map(function (row) {\n        return headerKeys\n            .map(function (fieldName) { var _a; return JSON.stringify(row[fieldName] === 0 ? 0 : (_a = row[fieldName]) !== null && _a !== void 0 ? _a : \"\"); })\n            .join(delimiter);\n    });\n    csv.unshift(columnNames.join(delimiter));\n    var csvAsString = csv.join(\"\\r\\n\");\n    triggerCsvDownload(csvAsString, formattedFilename);\n};\nvar triggerCsvDownload = function (csvAsString, fileName) {\n    // BOM support for special characters in Excel\n    var byteOrderMark = \"\\ufeff\";\n    var blob = new Blob([byteOrderMark, csvAsString], {\n        type: CSV_FILE_TYPE,\n    });\n    var link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = fileName;\n    link.style.display = \"none\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n};\nvar getFilename = function (providedFilename) {\n    return /csv$/i.test(providedFilename)\n        ? providedFilename\n        : \"\".concat(providedFilename, \".csv\");\n};\nexport default csvDownload;\n"],"mappings":"AAAA,IAAIA,aAAa,GAAG,yBAAyB;AAC7C,IAAIC,WAAW,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAC5B,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI;IAAEC,EAAE,GAAGF,EAAE,CAACG,QAAQ;IAAEA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,YAAY,GAAGA,EAAE;IAAEE,EAAE,GAAGJ,EAAE,CAACK,SAAS;IAAEA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGA,EAAE;IAAEE,OAAO,GAAGN,EAAE,CAACM,OAAO;EACjK,IAAIC,iBAAiB,GAAGC,WAAW,CAACL,QAAQ,CAAC;EAC7C,IAAIF,IAAI,CAACQ,MAAM,KAAK,CAAC,EAAE;IACnBC,kBAAkB,CAACJ,OAAO,GAAGA,OAAO,CAACK,IAAI,CAACN,SAAS,CAAC,GAAG,EAAE,EAAEE,iBAAiB,CAAC;IAC7E;EACJ;EACA,IAAIK,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC,CAAC;EACrC,IAAIc,WAAW,GAAGT,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAGM,UAAU;EAC/E,IAAII,GAAG,GAAGf,IAAI,CAACgB,GAAG,CAAC,UAAUC,GAAG,EAAE;IAC9B,OAAON,UAAU,CACZK,GAAG,CAAC,UAAUE,SAAS,EAAE;MAAE,IAAInB,EAAE;MAAE,OAAOoB,IAAI,CAACC,SAAS,CAACH,GAAG,CAACC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAACnB,EAAE,GAAGkB,GAAG,CAACC,SAAS,CAAC,MAAM,IAAI,IAAInB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,CAAC;IAAE,CAAC,CAAC,CAClJW,IAAI,CAACN,SAAS,CAAC;EACxB,CAAC,CAAC;EACFW,GAAG,CAACM,OAAO,CAACP,WAAW,CAACJ,IAAI,CAACN,SAAS,CAAC,CAAC;EACxC,IAAIkB,WAAW,GAAGP,GAAG,CAACL,IAAI,CAAC,MAAM,CAAC;EAClCD,kBAAkB,CAACa,WAAW,EAAEhB,iBAAiB,CAAC;AACtD,CAAC;AACD,IAAIG,kBAAkB,GAAG,SAAAA,CAAUa,WAAW,EAAEC,QAAQ,EAAE;EACtD;EACA,IAAIC,aAAa,GAAG,QAAQ;EAC5B,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,aAAa,EAAEF,WAAW,CAAC,EAAE;IAC9CK,IAAI,EAAE9B;EACV,CAAC,CAAC;EACF,IAAI+B,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACtCF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;EACrCG,IAAI,CAACM,QAAQ,GAAGX,QAAQ;EACxBK,IAAI,CAACO,KAAK,CAACC,OAAO,GAAG,MAAM;EAC3BP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC;EAC/BA,IAAI,CAACW,KAAK,EAAE;EACZV,QAAQ,CAACQ,IAAI,CAACG,WAAW,CAACZ,IAAI,CAAC;AACnC,CAAC;AACD,IAAIrB,WAAW,GAAG,SAAAA,CAAUkC,gBAAgB,EAAE;EAC1C,OAAO,OAAO,CAACC,IAAI,CAACD,gBAAgB,CAAC,GAC/BA,gBAAgB,GAChB,EAAE,CAACE,MAAM,CAACF,gBAAgB,EAAE,MAAM,CAAC;AAC7C,CAAC;AACD,eAAe3C,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}