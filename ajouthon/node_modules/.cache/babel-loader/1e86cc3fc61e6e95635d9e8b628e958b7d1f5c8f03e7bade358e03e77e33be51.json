{"ast":null,"code":"var _jsxFileName = \"/Users/woohyun/AjouThon_Frontend/ajouthon/src/components/ClubTale/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useTable, useGlobalFilter } from \"react-table\";\nimport styled from \"styled-components\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClubTable = _ref => {\n  _s();\n  let {\n    columnData,\n    datas,\n    needCheckBox\n  } = _ref;\n  const columns = useMemo(() => columnData, []);\n  const data = useMemo(() => datas, []);\n  const [allChecked, setAllChecked] = useState(true);\n  const checkboxRef = useRef([]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    // @ts-ignore\n    setGlobalFilter\n  } =\n  // @ts-ignore\n  useTable({\n    columns,\n    data\n  }, useGlobalFilter);\n  useEffect(() => {\n    if (allChecked) {\n      checkboxRef.current.map(box => {\n        box.checked = true;\n      });\n    } else {\n      checkboxRef.current.map(box => {\n        box.checked = false;\n      });\n    }\n  }, [allChecked]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSubmit: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n      align: \"center\",\n      width: \"800\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(StyledThead, {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: [needCheckBox ? /*#__PURE__*/_jsxDEV(StyledTh, {\n            style: {\n              width: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                e.target.checked ? setAllChecked(true) : setAllChecked(false);\n                rows.map(row => row.index);\n              },\n              type: \"checkbox\",\n              name: \"xxx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(StyledTh, {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTBody, {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          // console.log(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: [needCheckBox ? /*#__PURE__*/_jsxDEV(StyledTd, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: e => {\n                  checkboxRef.current[row.index] = e;\n                },\n                type: \"checkbox\",\n                name: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), row.cells.map(cell => /*#__PURE__*/_jsxDEV(StyledTd, {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClubTable, \"9rmLnsr5SXr1c3YLW36o25WRBdE=\", false, function () {\n  return [useTable];\n});\n_c = ClubTable;\nconst StyledTable = styled.table`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n`;\n_c2 = StyledTable;\nconst StyledThead = styled.thead`\n  background: #fafafa;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n`;\n_c3 = StyledThead;\nconst StyledTBody = styled.tbody`\n  text-align: center;\n`;\n_c4 = StyledTBody;\nconst StyledTh = styled.th`\n  height: 40px;\n  vertical-align: middle;\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n  line-height: 5px;\n`;\n_c5 = StyledTh;\nconst StyledTd = styled.td`\n  height: 40px;\n  vertical-align: middle;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n`;\n_c6 = StyledTd;\nexport default ClubTable;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ClubTable\");\n$RefreshReg$(_c2, \"StyledTable\");\n$RefreshReg$(_c3, \"StyledThead\");\n$RefreshReg$(_c4, \"StyledTBody\");\n$RefreshReg$(_c5, \"StyledTh\");\n$RefreshReg$(_c6, \"StyledTd\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","useTable","useGlobalFilter","styled","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","ClubTable","_ref","_s","columnData","datas","needCheckBox","columns","data","allChecked","setAllChecked","checkboxRef","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","current","map","box","checked","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","StyledTable","align","width","StyledThead","headerGroup","getHeaderGroupProps","StyledTh","style","onChange","e","target","row","index","type","name","headers","column","getHeaderProps","render","StyledTBody","getRowProps","StyledTd","ref","id","cells","cell","getCellProps","_c","table","_c2","thead","_c3","tbody","_c4","th","_c5","td","_c6","$RefreshReg$"],"sources":["/Users/woohyun/AjouThon_Frontend/ajouthon/src/components/ClubTale/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useTable, useGlobalFilter } from \"react-table\";\nimport styled from \"styled-components\";\nimport Search from \"./Search\";\n\ninterface ClubTableType {\n  columnData: {\n    accessor: string;\n    Header: string;\n  }[];\n  datas: unknown[];\n  needCheckBox: boolean;\n}\nconst ClubTable = ({ columnData, datas, needCheckBox }: ClubTableType) => {\n  const columns = useMemo(() => columnData, []);\n  const data = useMemo(() => datas, []);\n  const [allChecked, setAllChecked] = useState(true);\n  const checkboxRef = useRef<HTMLInputElement[]>([]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    // @ts-ignore\n    setGlobalFilter,\n  } =\n    // @ts-ignore\n    useTable({ columns, data }, useGlobalFilter);\n  useEffect(() => {\n    if (allChecked) {\n      checkboxRef.current.map((box: HTMLInputElement) => {\n        box.checked = true;\n      });\n    } else {\n      checkboxRef.current.map((box: HTMLInputElement) => {\n        box.checked = false;\n      });\n    }\n  }, [allChecked]);\n  return (\n    <>\n      <Search onSubmit={setGlobalFilter}></Search>\n      <StyledTable align=\"center\" width=\"800\" {...getTableProps()}>\n        <StyledThead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {needCheckBox ? (\n                <StyledTh style={{ width: \"50px\" }}>\n                  <input\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      e.target.checked\n                        ? setAllChecked(true)\n                        : setAllChecked(false);\n                      rows.map((row) => row.index);\n                    }}\n                    type=\"checkbox\"\n                    name=\"xxx\"\n                  />\n                </StyledTh>\n              ) : (\n                <></>\n              )}\n\n              {headerGroup.headers.map((column) => (\n                <StyledTh {...column.getHeaderProps()}>\n                  {column.render(\"Header\")}\n                </StyledTh>\n              ))}\n            </tr>\n          ))}\n        </StyledThead>\n        <StyledTBody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            // console.log(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {needCheckBox ? (\n                  <StyledTd>\n                    <input\n                      ref={(e: HTMLInputElement) => {\n                        checkboxRef.current[row.index] = e;\n                      }}\n                      type=\"checkbox\"\n                      name={row.id}\n                    />\n                  </StyledTd>\n                ) : (\n                  <></>\n                )}\n\n                {row.cells.map((cell) => (\n                  <StyledTd {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </StyledTd>\n                ))}\n              </tr>\n            );\n          })}\n        </StyledTBody>\n      </StyledTable>\n    </>\n  );\n};\n\nconst StyledTable = styled.table`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n`;\nconst StyledThead = styled.thead`\n  background: #fafafa;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n`;\nconst StyledTBody = styled.tbody`\n  text-align: center;\n`;\nconst StyledTh = styled.th`\n  height: 40px;\n  vertical-align: middle;\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n  line-height: 5px;\n`;\nconst StyledTd = styled.td`\n  height: 40px;\n  vertical-align: middle;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n`;\nexport default ClubTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}